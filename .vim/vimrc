" Jack Frankland's .vimrc Configuration
" =====================================
" ViCompatibility(DO NOT MOVE - MUST BE FIRST IN FILE) {{{
" ============
" If a .vimrc is found in the $HOME directory then `:set nocompatible`
" happens by default.
if &compatible
  " Only set no 'nocompatible' when 'compatible' is set.
  set nocompatible
endif
" }}}
" Filetype indentation + syntax {{{
" ====================
 " Automatic, language-dependent indentation, syntax coloring and other
" functionality.
filetype indent plugin on
syntax on
" }}}
" Leader Mappings {{{
" ===============
let mapleader="\<Space>" " Set leader key to be spacebar.
let maplocalleader="\\" " Set local leader to be backslash.
" }}}
" Colors {{{
" =====
colorscheme default " Set colorscheme.
" }}}
" Plugin Configuration {{{
" ====================
" Base16 {{{
" ======
if filereadable(expand("~/.vimrc_background"))
  let base16colorspace=256
  source ~/.vimrc_background
endif
"}}}
" Airline {{{
" =======
let g:airline#extensions#tabline#enabled=1 " Enable tabline to be displayed.
let g:airline#extensions#tabline#left_sep = ' ' " Seperator around current tab in tabline.
let g:airline#extensions#tabline#left_alt_sep = '|' " Seperator around other tabs in tabline.
let g:airline#extensions#tabline#formatter = 'unique_tail_improved' "  Sets how file paths are displayed in each individual tab as well as the current buffer indicator in the upper right.
" }}}
" Airline Themes {{{
" ==============
let g:airline_theme='solarized'
" }}}
" FZF {{{
" ===
" Usage mappings.
nnoremap <C-p> :Files<CR>
nnoremap <leader>pf :Files<CR>
nnoremap <leader>pg :GFiles<CR>
nnoremap <leader>pc :Commits<CR>
nnoremap <leader>pb :Buffers<CR>
nnoremap <leader>pt :Tags<CR>
" Mapping selecting mappings
nmap <leader><tab> <plug>(fzf-maps-n)
xmap <leader><tab> <plug>(fzf-maps-x)
omap <leader><tab> <plug>(fzf-maps-o)
" Insert mode completion
imap <c-x><C-k> <plug>(fzf-complete-word)
imap <c-x><C-f> <plug>(fzf-complete-path)
imap <c-x><C-j> <plug>(fzf-complete-file-ag)
imap <c-x><C-l> <plug>(fzf-complete-line)
" This is the default extra key bindings
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }
" Default fzf layout
" - down / up / left / right
let g:fzf_layout = { 'down': '~40%' }
" Match current colorscheme.
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }
" }}}
" Formative {{{
" =========
let g:fmtv_clang_format_nor_key  = '<C-c>' 
let g:fmtv_clang_format_vis_key  = '<C-c>'  
let g:fmtv_clang_format_ins_key  = '<C-c>'  
let g:fmtv_clang_format_line_key = '<C-c>c'  
let g:fmtv_clang_format_file_key = '<C-c>u' 
" }}}
" YCM {{{
" ===
" Populate location list with diagonstic results from when ycm compiles the
" file (any syntax errors etc.)
let g:ycm_always_populate_location_list = 1
" Auto-close preview window (which shows extra information about any possible
" autocompletions) after a completion string has been selected.
let g:ycm_autoclose_preview_window_after_completion = 1
" }}}
" }}}
" Plugins {{{
" =======
" Vim >=8 has native support for adding runtime paths.
if has('packages')
    packloadall
    silent! helptags ALL
else
    " Use pathogen for plug-in loading.
    source $HOME/.vim/pack/bundle/opt/vim-pathogen/autoload /pathogen.vim
    call pathogen#infect('pack/bundle/start/{}')
    Helptags
endif
" }}}
" vim: foldenable foldmethod=marker foldlevel=0 ts=4 sts=4 sw=4
